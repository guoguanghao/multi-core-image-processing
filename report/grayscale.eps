%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (../uploads/eqcu6gtfk968okd2tbpmtk4mk0/Free-Converter.com-grayscale-84365147.eps)
%%CreationDate: (2018-02-25T18:51:47-05:00)
%%BoundingBox: -0 -0 184 8
%%HiResBoundingBox: 0 0 183.84 8
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 184 8
userdict begin
DisplayImage
0 0
183.84 7.68
12
383 16
1
1
1
1
01E0FFFFFFFE0FFE0FE7E078CFFFFFFFE003FFFFFFE0FFE63E0F03CC7FFFFFFFC00FFFFFFF07FF
8FC0F11FFFFFFFC006C7F3FFFFFFFCE7FCC707C6380FFFFFFFF8F1FFFFFFCE7FE07CCE61C0FFFF
FFFF070FFFFFFE73FE0F98701FFFFFFFF3E2E3E7FFFFFFF8E3FCE7E7CF181FFFFFFFF9F9FFF7FF
8E3FE0F9CEF1C1FFFFFFFE1F9FFF7FFC71FFCFBC707FFFFFFFE3E2E3CFFFFFFFF9E3FCE7E7C79B
FFFFFFFFF1F1FFF7FF8F3FEFF1FC79DFFFFFFFFC3F9FFF7FFCF1FFCF1E77FFFFFFFFE3E2E39FFF
FFFFF9F3FFE7E7C79BFFFCFCFFF1F1FFF7FF9F3FEFF1FC79DFFFCFCFFC7F9FFF7FFCF9FFCF1E77
FFF3F3FFE7E2F13FFFFFFFF9F3FFC7E7CF181FFC78FFF3E3FFF7FF9F3FE0F00E71C1FFC78FF8FF
9FFF7FFCF9FFCF9E703FF1E3FFE786F07FFF0003F9F3FF0FE7FF188FFE31FFF007FFF7FF9F3FE0
71C7F1C0FFE31FF8FFFFFF7FFCF9FFCFFC711FF8C7FFC01EF87FFFFFFFF9F3FFC3E7FE3BC7FF03
FFE38FFFF7FF9F3FEE31C7E3DC7FF03FF1FFFFFF7FFCF9FFCFF8F78FFC0FFFC786F8FFFFFFFFF9
F3FFE3E7FC7FE7FF8FFFE3CFF8001F9F3FFF33C7C7FE7FF87FF1F81F8000FCF9FFCFF9FFCFFE1F
FFCFC6F9FFFFFFFFF9F3FFE3E7F8FFE7FF8FFFE3CFFFF7FF9F3FFF33C7CFFE7FF87FF1FE3FFF7F
FCF9FFCFF3FFCFFE1FFFCFE6F1FFFF0003F9E3F8E3E7F1D9E7FF03FFE7CFFFF7FF8F3FCF31C79D
9E7FF03FF9FE7FFF7FFCF1FFCFE767CFFC0FFF8FC6F1FFFFFFFFF8E398E3E7E3D9C7FE31FFC78D
FFF7FF8E39CE39C73D9C7FE31FF8FC7FFF7FFC71CFCFCF678FF8C7FF8FC6F3FFFFFFFFFCE71CC3
E7C0198FFC78FFC789FFF7FFCE71CE3886019C7FC78FFC787FFF7FFE738FCF80631FF1E3FF9F0E
C0FFFFFFFFFE0F1E0700C01C1FFCFCFF01C1FFF7FFE0F1E07C0C01C0FFCFCFFE02FFFF7FFF078E
0100703FF3F3FE001EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFF
FFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FF
FFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFE
end
%%PageTrailer
%%Trailer
%%EOF
